name: Actions Workflow

# on: [push]
on:
  push:
    # # matches all branches except the ones listed below. It cannot be used with the branches keyword
    # branches-ignore: 
    #   - 'feature/**' # matches feature/featA, feature/featB, feature/feat/a
    branches:
      - master
      - 'feature/*' # matches pushes to feature/featA, feature/featB. Will not match feature/feat/A
      - 'feature/**' # matches pushes to feature/featA, feature/featB, feature/feat/A
      - '!feature/featC' # Explicitly prevent matching pushes to the feature/featC branch
    tags:
      - v1 # matches pushes with any tags with v1 label
      - v1.*
    # Match only certain file patterns
    paths:
      - '**.js' # matches only when javascript files are pushed
      - '!filename.js' # Explicitly prevent matching filename.js on push
    # # matches all file paths except the ones listed below. It cannot be used with the paths keyword
    # paths-ignore:
    #   - 'docs/**'
    # # matches all tags except the ones listed below. It cannot be used with the tags keyword
    # tags-ignore:
    #   - v2
  # repository_dispatch:
  #   types: [build] # A custom webhook event name.
  # schedule:
  #   # Cron schedule expression: Minutes, hours, day of the month, month, day of the week
  #   # This will run "every minute" - of every hour of every day, of every month
  # - cron: "0/5 * * * *"
  # - cron: "0/6 * * * *"
  # push:
  pull_request:
    # pull request activities that will trigger this workflow
    types: ["closed", "assigned", "opened", "reopened"]

jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: Print Repository Dispatch Payload
        run: |
          echo "${{ github.event.client_payload.env }}"
      - name: List Files
        run: |
          pwd
          ls -a
          echo $GITHUB_SHA
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          echo $GITHUB_REF
          echo "${{ github.token }}"
      - name: checkout
        uses: actions/checkout@v2 # Clone your repository into the working directory of your VM
      - name: List Files After Checkout # Cloned repository should now be visible in the directory
        run: |
          pwd
          ls -a
      - name: Simple JS Action
        id: greet # Used to reference this step from the steps variable that github actions provides
        uses: actions/hello-world-javascript-action@v1.1
        with:
          who-to-greet: Leslie # Input for this action
      - name: Log Greeting Time
        run: echo "${{ steps.greet.outputs.time }}" # Reference the greet step above